#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OFOS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OfosDb")]
	public partial class ofosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertStaffLogin(StaffLogin instance);
    partial void UpdateStaffLogin(StaffLogin instance);
    partial void DeleteStaffLogin(StaffLogin instance);
    partial void InsertFoodItem(FoodItem instance);
    partial void UpdateFoodItem(FoodItem instance);
    partial void DeleteFoodItem(FoodItem instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertFoodIngredient(FoodIngredient instance);
    partial void UpdateFoodIngredient(FoodIngredient instance);
    partial void DeleteFoodIngredient(FoodIngredient instance);
    #endregion
		
		public ofosDataContext() : 
				base(global::OFOS.Properties.Settings.Default.OfosDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ofosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ofosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ofosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ofosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<StaffLogin> StaffLogins
		{
			get
			{
				return this.GetTable<StaffLogin>();
			}
		}
		
		public System.Data.Linq.Table<FoodItem> FoodItems
		{
			get
			{
				return this.GetTable<FoodItem>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<FoodIngredient> FoodIngredients
		{
			get
			{
				return this.GetTable<FoodIngredient>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Customer_Insert")]
		public int Customer_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(50)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, phone, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StaffLogin_Check")]
		public ISingleResult<StaffLogin_CheckResult> StaffLogin_Check([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((ISingleResult<StaffLogin_CheckResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodItem_Fetch")]
		public ISingleResult<FoodItem_FetchResult> FoodItem_Fetch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="NVarChar(50)")] string category)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), category);
			return ((ISingleResult<FoodItem_FetchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodItemAvailability_Update")]
		public int FoodItemAvailability_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FoodItemName", DbType="VarChar(50)")] string foodItemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdatedItems", DbType="Int")] System.Nullable<int> updatedItems)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodItemName, updatedItems);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodItemAvailable_Check")]
		public ISingleResult<FoodItemAvailable_CheckResult> FoodItemAvailable_Check([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FoodItemName", DbType="NVarChar(50)")] string foodItemName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodItemName);
			return ((ISingleResult<FoodItemAvailable_CheckResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodItemInsert")]
		public int FoodItemInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Image", DbType="VarChar(150)")] string image, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(4,2)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AvailableCount", DbType="Int")] System.Nullable<int> availableCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="VarChar(50)")] string category)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, image, price, availableCount, category);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_Insert")]
		public int Order_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerId", DbType="Int")] System.Nullable<int> customerId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderPlaced", DbType="VarChar(50)")] string orderPlaced, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCost", DbType="Decimal(18,0)")] System.Nullable<decimal> totalCost, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="VarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] ref System.Nullable<int> orderId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerId, orderPlaced, totalCost, status, orderId);
			orderId = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodItemUpdate")]
		public int FoodItemUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Image", DbType="VarChar(150)")] string image, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(4,2)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AvailableCount", DbType="Int")] System.Nullable<int> availableCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="VarChar(50)")] string category)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, image, price, availableCount, category);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTax")]
		public ISingleResult<GetTaxResult> GetTax([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Province", DbType="VarChar(50)")] string province)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), province);
			return ((ISingleResult<GetTaxResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIngredients")]
		public ISingleResult<GetIngredientsResult> GetIngredients([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FoodItemId", DbType="Int")] System.Nullable<int> foodItemId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodItemId);
			return ((ISingleResult<GetIngredientsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodIngredientsInsertUpdate")]
		public int FoodIngredientsInsertUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FoodItemId", DbType="Int")] System.Nullable<int> foodItemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ingredient", DbType="VarChar(50)")] string ingredient, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Float")] System.Nullable<double> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Unit", DbType="VarChar(10)")] string unit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, foodItemId, ingredient, amount, unit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodItemDelete")]
		public int FoodItemDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FoodIngredientDelete")]
		public int FoodIngredientDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffLogin")]
	public partial class StaffLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public StaffLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodItem")]
	public partial class FoodItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FoodItemName;
		
		private string _FoodItemImage;
		
		private System.Nullable<decimal> _FoodItemPrice;
		
		private System.Nullable<int> _FoodItemAvailable;
		
		private string _FoodItemCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFoodItemNameChanging(string value);
    partial void OnFoodItemNameChanged();
    partial void OnFoodItemImageChanging(string value);
    partial void OnFoodItemImageChanged();
    partial void OnFoodItemPriceChanging(System.Nullable<decimal> value);
    partial void OnFoodItemPriceChanged();
    partial void OnFoodItemAvailableChanging(System.Nullable<int> value);
    partial void OnFoodItemAvailableChanged();
    partial void OnFoodItemCategoryChanging(string value);
    partial void OnFoodItemCategoryChanged();
    #endregion
		
		public FoodItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FoodItemName
		{
			get
			{
				return this._FoodItemName;
			}
			set
			{
				if ((this._FoodItemName != value))
				{
					this.OnFoodItemNameChanging(value);
					this.SendPropertyChanging();
					this._FoodItemName = value;
					this.SendPropertyChanged("FoodItemName");
					this.OnFoodItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemImage", DbType="NVarChar(150)")]
		public string FoodItemImage
		{
			get
			{
				return this._FoodItemImage;
			}
			set
			{
				if ((this._FoodItemImage != value))
				{
					this.OnFoodItemImageChanging(value);
					this.SendPropertyChanging();
					this._FoodItemImage = value;
					this.SendPropertyChanged("FoodItemImage");
					this.OnFoodItemImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemPrice", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> FoodItemPrice
		{
			get
			{
				return this._FoodItemPrice;
			}
			set
			{
				if ((this._FoodItemPrice != value))
				{
					this.OnFoodItemPriceChanging(value);
					this.SendPropertyChanging();
					this._FoodItemPrice = value;
					this.SendPropertyChanged("FoodItemPrice");
					this.OnFoodItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemAvailable", DbType="Int")]
		public System.Nullable<int> FoodItemAvailable
		{
			get
			{
				return this._FoodItemAvailable;
			}
			set
			{
				if ((this._FoodItemAvailable != value))
				{
					this.OnFoodItemAvailableChanging(value);
					this.SendPropertyChanging();
					this._FoodItemAvailable = value;
					this.SendPropertyChanged("FoodItemAvailable");
					this.OnFoodItemAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemCategory", DbType="NVarChar(50)")]
		public string FoodItemCategory
		{
			get
			{
				return this._FoodItemCategory;
			}
			set
			{
				if ((this._FoodItemCategory != value))
				{
					this.OnFoodItemCategoryChanging(value);
					this.SendPropertyChanging();
					this._FoodItemCategory = value;
					this.SendPropertyChanged("FoodItemCategory");
					this.OnFoodItemCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _CustomerId;
		
		private string _OrderPlaced;
		
		private System.Nullable<decimal> _TotalCost;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnOrderPlacedChanging(string value);
    partial void OnOrderPlacedChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPlaced", DbType="VarChar(50)")]
		public string OrderPlaced
		{
			get
			{
				return this._OrderPlaced;
			}
			set
			{
				if ((this._OrderPlaced != value))
				{
					this.OnOrderPlacedChanging(value);
					this.SendPropertyChanging();
					this._OrderPlaced = value;
					this.SendPropertyChanged("OrderPlaced");
					this.OnOrderPlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodIngredients")]
	public partial class FoodIngredient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FoodItemId;
		
		private string _Ingredient;
		
		private System.Nullable<double> _Amount;
		
		private string _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFoodItemIdChanging(int value);
    partial void OnFoodItemIdChanged();
    partial void OnIngredientChanging(string value);
    partial void OnIngredientChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    #endregion
		
		public FoodIngredient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemId", DbType="Int NOT NULL")]
		public int FoodItemId
		{
			get
			{
				return this._FoodItemId;
			}
			set
			{
				if ((this._FoodItemId != value))
				{
					this.OnFoodItemIdChanging(value);
					this.SendPropertyChanging();
					this._FoodItemId = value;
					this.SendPropertyChanged("FoodItemId");
					this.OnFoodItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ingredient", DbType="VarChar(50)")]
		public string Ingredient
		{
			get
			{
				return this._Ingredient;
			}
			set
			{
				if ((this._Ingredient != value))
				{
					this.OnIngredientChanging(value);
					this.SendPropertyChanging();
					this._Ingredient = value;
					this.SendPropertyChanged("Ingredient");
					this.OnIngredientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class StaffLogin_CheckResult
	{
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Type;
		
		public StaffLogin_CheckResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	public partial class FoodItem_FetchResult
	{
		
		private int _Id;
		
		private string _FoodItemName;
		
		private string _FoodItemImage;
		
		private System.Nullable<decimal> _FoodItemPrice;
		
		private System.Nullable<int> _FoodItemAvailable;
		
		public FoodItem_FetchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FoodItemName
		{
			get
			{
				return this._FoodItemName;
			}
			set
			{
				if ((this._FoodItemName != value))
				{
					this._FoodItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemImage", DbType="NVarChar(150)")]
		public string FoodItemImage
		{
			get
			{
				return this._FoodItemImage;
			}
			set
			{
				if ((this._FoodItemImage != value))
				{
					this._FoodItemImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemPrice", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> FoodItemPrice
		{
			get
			{
				return this._FoodItemPrice;
			}
			set
			{
				if ((this._FoodItemPrice != value))
				{
					this._FoodItemPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemAvailable", DbType="Int")]
		public System.Nullable<int> FoodItemAvailable
		{
			get
			{
				return this._FoodItemAvailable;
			}
			set
			{
				if ((this._FoodItemAvailable != value))
				{
					this._FoodItemAvailable = value;
				}
			}
		}
	}
	
	public partial class FoodItemAvailable_CheckResult
	{
		
		private System.Nullable<int> _FoodItemAvailable;
		
		public FoodItemAvailable_CheckResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemAvailable", DbType="Int")]
		public System.Nullable<int> FoodItemAvailable
		{
			get
			{
				return this._FoodItemAvailable;
			}
			set
			{
				if ((this._FoodItemAvailable != value))
				{
					this._FoodItemAvailable = value;
				}
			}
		}
	}
	
	public partial class GetTaxResult
	{
		
		private System.Nullable<double> _Tax;
		
		public GetTaxResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Float")]
		public System.Nullable<double> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
	}
	
	public partial class GetIngredientsResult
	{
		
		private int _Id;
		
		private int _FoodItemId;
		
		private string _Ingredient;
		
		private System.Nullable<double> _Amount;
		
		private string _Unit;
		
		public GetIngredientsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodItemId", DbType="Int NOT NULL")]
		public int FoodItemId
		{
			get
			{
				return this._FoodItemId;
			}
			set
			{
				if ((this._FoodItemId != value))
				{
					this._FoodItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ingredient", DbType="VarChar(50)")]
		public string Ingredient
		{
			get
			{
				return this._Ingredient;
			}
			set
			{
				if ((this._Ingredient != value))
				{
					this._Ingredient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
